// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/ai/generativelanguage/v1beta2/discuss_service.proto

package com.google.ai.generativelanguage.v1beta2;

/**
 * <pre>
 * All of the structured input text passed to the model as a prompt.
 * A `MessagePrompt` contains a structured set of fields that provide context
 * for the conversation, examples of user input/model output message pairs that
 * prime the model to respond in different ways, and the conversation history
 * or list of messages representing the alternating turns of the conversation
 * between the user and the model.
 * </pre>
 *
 * Protobuf type {@code google.ai.generativelanguage.v1beta2.MessagePrompt}
 */
public final class MessagePrompt extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.ai.generativelanguage.v1beta2.MessagePrompt)
    MessagePromptOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MessagePrompt.newBuilder() to construct.
  private MessagePrompt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MessagePrompt() {
    context_ = "";
    examples_ = java.util.Collections.emptyList();
    messages_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MessagePrompt();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.ai.generativelanguage.v1beta2.DiscussServiceProto.internal_static_google_ai_generativelanguage_v1beta2_MessagePrompt_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.ai.generativelanguage.v1beta2.DiscussServiceProto.internal_static_google_ai_generativelanguage_v1beta2_MessagePrompt_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.ai.generativelanguage.v1beta2.MessagePrompt.class, com.google.ai.generativelanguage.v1beta2.MessagePrompt.Builder.class);
  }

  public static final int CONTEXT_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object context_ = "";
  /**
   * <pre>
   * Optional. Text that should be provided to the model first to ground the
   * response.
   * If not empty, this `context` will be given to the model first before the
   * `examples` and `messages`. When using a `context` be sure to provide it
   * with every request to maintain continuity.
   * This field can be a description of your prompt to the model to help provide
   * context and guide the responses. Examples: "Translate the phrase from
   * English to French." or "Given a statement, classify the sentiment as happy,
   * sad or neutral."
   * Anything included in this field will take precedence over message history
   * if the total input size exceeds the model's `input_token_limit` and the
   * input request is truncated.
   * </pre>
   *
   * <code>string context = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The context.
   */
  @java.lang.Override
  public java.lang.String getContext() {
    java.lang.Object ref = context_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      context_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional. Text that should be provided to the model first to ground the
   * response.
   * If not empty, this `context` will be given to the model first before the
   * `examples` and `messages`. When using a `context` be sure to provide it
   * with every request to maintain continuity.
   * This field can be a description of your prompt to the model to help provide
   * context and guide the responses. Examples: "Translate the phrase from
   * English to French." or "Given a statement, classify the sentiment as happy,
   * sad or neutral."
   * Anything included in this field will take precedence over message history
   * if the total input size exceeds the model's `input_token_limit` and the
   * input request is truncated.
   * </pre>
   *
   * <code>string context = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The bytes for context.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getContextBytes() {
    java.lang.Object ref = context_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      context_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXAMPLES_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.google.ai.generativelanguage.v1beta2.Example> examples_;
  /**
   * <pre>
   * Optional. Examples of what the model should generate.
   * This includes both user input and the response that the model should
   * emulate.
   * These `examples` are treated identically to conversation messages except
   * that they take precedence over the history in `messages`:
   * If the total input size exceeds the model's `input_token_limit` the input
   * will be truncated. Items will be dropped from `messages` before `examples`.
   * </pre>
   *
   * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ai.generativelanguage.v1beta2.Example> getExamplesList() {
    return examples_;
  }
  /**
   * <pre>
   * Optional. Examples of what the model should generate.
   * This includes both user input and the response that the model should
   * emulate.
   * These `examples` are treated identically to conversation messages except
   * that they take precedence over the history in `messages`:
   * If the total input size exceeds the model's `input_token_limit` the input
   * will be truncated. Items will be dropped from `messages` before `examples`.
   * </pre>
   *
   * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ai.generativelanguage.v1beta2.ExampleOrBuilder> 
      getExamplesOrBuilderList() {
    return examples_;
  }
  /**
   * <pre>
   * Optional. Examples of what the model should generate.
   * This includes both user input and the response that the model should
   * emulate.
   * These `examples` are treated identically to conversation messages except
   * that they take precedence over the history in `messages`:
   * If the total input size exceeds the model's `input_token_limit` the input
   * will be truncated. Items will be dropped from `messages` before `examples`.
   * </pre>
   *
   * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public int getExamplesCount() {
    return examples_.size();
  }
  /**
   * <pre>
   * Optional. Examples of what the model should generate.
   * This includes both user input and the response that the model should
   * emulate.
   * These `examples` are treated identically to conversation messages except
   * that they take precedence over the history in `messages`:
   * If the total input size exceeds the model's `input_token_limit` the input
   * will be truncated. Items will be dropped from `messages` before `examples`.
   * </pre>
   *
   * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public com.google.ai.generativelanguage.v1beta2.Example getExamples(int index) {
    return examples_.get(index);
  }
  /**
   * <pre>
   * Optional. Examples of what the model should generate.
   * This includes both user input and the response that the model should
   * emulate.
   * These `examples` are treated identically to conversation messages except
   * that they take precedence over the history in `messages`:
   * If the total input size exceeds the model's `input_token_limit` the input
   * will be truncated. Items will be dropped from `messages` before `examples`.
   * </pre>
   *
   * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public com.google.ai.generativelanguage.v1beta2.ExampleOrBuilder getExamplesOrBuilder(
      int index) {
    return examples_.get(index);
  }

  public static final int MESSAGES_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.google.ai.generativelanguage.v1beta2.Message> messages_;
  /**
   * <pre>
   * Required. A snapshot of the recent conversation history sorted
   * chronologically.
   * Turns alternate between two authors.
   * If the total input size exceeds the model's `input_token_limit` the input
   * will be truncated: The oldest items will be dropped from `messages`.
   * </pre>
   *
   * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public java.util.List<com.google.ai.generativelanguage.v1beta2.Message> getMessagesList() {
    return messages_;
  }
  /**
   * <pre>
   * Required. A snapshot of the recent conversation history sorted
   * chronologically.
   * Turns alternate between two authors.
   * If the total input size exceeds the model's `input_token_limit` the input
   * will be truncated: The oldest items will be dropped from `messages`.
   * </pre>
   *
   * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.ai.generativelanguage.v1beta2.MessageOrBuilder> 
      getMessagesOrBuilderList() {
    return messages_;
  }
  /**
   * <pre>
   * Required. A snapshot of the recent conversation history sorted
   * chronologically.
   * Turns alternate between two authors.
   * If the total input size exceeds the model's `input_token_limit` the input
   * will be truncated: The oldest items will be dropped from `messages`.
   * </pre>
   *
   * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public int getMessagesCount() {
    return messages_.size();
  }
  /**
   * <pre>
   * Required. A snapshot of the recent conversation history sorted
   * chronologically.
   * Turns alternate between two authors.
   * If the total input size exceeds the model's `input_token_limit` the input
   * will be truncated: The oldest items will be dropped from `messages`.
   * </pre>
   *
   * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public com.google.ai.generativelanguage.v1beta2.Message getMessages(int index) {
    return messages_.get(index);
  }
  /**
   * <pre>
   * Required. A snapshot of the recent conversation history sorted
   * chronologically.
   * Turns alternate between two authors.
   * If the total input size exceeds the model's `input_token_limit` the input
   * will be truncated: The oldest items will be dropped from `messages`.
   * </pre>
   *
   * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @java.lang.Override
  public com.google.ai.generativelanguage.v1beta2.MessageOrBuilder getMessagesOrBuilder(
      int index) {
    return messages_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(context_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, context_);
    }
    for (int i = 0; i < examples_.size(); i++) {
      output.writeMessage(2, examples_.get(i));
    }
    for (int i = 0; i < messages_.size(); i++) {
      output.writeMessage(3, messages_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(context_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, context_);
    }
    for (int i = 0; i < examples_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, examples_.get(i));
    }
    for (int i = 0; i < messages_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, messages_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.ai.generativelanguage.v1beta2.MessagePrompt)) {
      return super.equals(obj);
    }
    com.google.ai.generativelanguage.v1beta2.MessagePrompt other = (com.google.ai.generativelanguage.v1beta2.MessagePrompt) obj;

    if (!getContext()
        .equals(other.getContext())) return false;
    if (!getExamplesList()
        .equals(other.getExamplesList())) return false;
    if (!getMessagesList()
        .equals(other.getMessagesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
    hash = (53 * hash) + getContext().hashCode();
    if (getExamplesCount() > 0) {
      hash = (37 * hash) + EXAMPLES_FIELD_NUMBER;
      hash = (53 * hash) + getExamplesList().hashCode();
    }
    if (getMessagesCount() > 0) {
      hash = (37 * hash) + MESSAGES_FIELD_NUMBER;
      hash = (53 * hash) + getMessagesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.ai.generativelanguage.v1beta2.MessagePrompt prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * All of the structured input text passed to the model as a prompt.
   * A `MessagePrompt` contains a structured set of fields that provide context
   * for the conversation, examples of user input/model output message pairs that
   * prime the model to respond in different ways, and the conversation history
   * or list of messages representing the alternating turns of the conversation
   * between the user and the model.
   * </pre>
   *
   * Protobuf type {@code google.ai.generativelanguage.v1beta2.MessagePrompt}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.ai.generativelanguage.v1beta2.MessagePrompt)
      com.google.ai.generativelanguage.v1beta2.MessagePromptOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.ai.generativelanguage.v1beta2.DiscussServiceProto.internal_static_google_ai_generativelanguage_v1beta2_MessagePrompt_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.ai.generativelanguage.v1beta2.DiscussServiceProto.internal_static_google_ai_generativelanguage_v1beta2_MessagePrompt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.ai.generativelanguage.v1beta2.MessagePrompt.class, com.google.ai.generativelanguage.v1beta2.MessagePrompt.Builder.class);
    }

    // Construct using com.google.ai.generativelanguage.v1beta2.MessagePrompt.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      context_ = "";
      if (examplesBuilder_ == null) {
        examples_ = java.util.Collections.emptyList();
      } else {
        examples_ = null;
        examplesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (messagesBuilder_ == null) {
        messages_ = java.util.Collections.emptyList();
      } else {
        messages_ = null;
        messagesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.ai.generativelanguage.v1beta2.DiscussServiceProto.internal_static_google_ai_generativelanguage_v1beta2_MessagePrompt_descriptor;
    }

    @java.lang.Override
    public com.google.ai.generativelanguage.v1beta2.MessagePrompt getDefaultInstanceForType() {
      return com.google.ai.generativelanguage.v1beta2.MessagePrompt.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.ai.generativelanguage.v1beta2.MessagePrompt build() {
      com.google.ai.generativelanguage.v1beta2.MessagePrompt result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.ai.generativelanguage.v1beta2.MessagePrompt buildPartial() {
      com.google.ai.generativelanguage.v1beta2.MessagePrompt result = new com.google.ai.generativelanguage.v1beta2.MessagePrompt(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.ai.generativelanguage.v1beta2.MessagePrompt result) {
      if (examplesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          examples_ = java.util.Collections.unmodifiableList(examples_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.examples_ = examples_;
      } else {
        result.examples_ = examplesBuilder_.build();
      }
      if (messagesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          messages_ = java.util.Collections.unmodifiableList(messages_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.messages_ = messages_;
      } else {
        result.messages_ = messagesBuilder_.build();
      }
    }

    private void buildPartial0(com.google.ai.generativelanguage.v1beta2.MessagePrompt result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.context_ = context_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.ai.generativelanguage.v1beta2.MessagePrompt) {
        return mergeFrom((com.google.ai.generativelanguage.v1beta2.MessagePrompt)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.ai.generativelanguage.v1beta2.MessagePrompt other) {
      if (other == com.google.ai.generativelanguage.v1beta2.MessagePrompt.getDefaultInstance()) return this;
      if (!other.getContext().isEmpty()) {
        context_ = other.context_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (examplesBuilder_ == null) {
        if (!other.examples_.isEmpty()) {
          if (examples_.isEmpty()) {
            examples_ = other.examples_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureExamplesIsMutable();
            examples_.addAll(other.examples_);
          }
          onChanged();
        }
      } else {
        if (!other.examples_.isEmpty()) {
          if (examplesBuilder_.isEmpty()) {
            examplesBuilder_.dispose();
            examplesBuilder_ = null;
            examples_ = other.examples_;
            bitField0_ = (bitField0_ & ~0x00000002);
            examplesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getExamplesFieldBuilder() : null;
          } else {
            examplesBuilder_.addAllMessages(other.examples_);
          }
        }
      }
      if (messagesBuilder_ == null) {
        if (!other.messages_.isEmpty()) {
          if (messages_.isEmpty()) {
            messages_ = other.messages_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMessagesIsMutable();
            messages_.addAll(other.messages_);
          }
          onChanged();
        }
      } else {
        if (!other.messages_.isEmpty()) {
          if (messagesBuilder_.isEmpty()) {
            messagesBuilder_.dispose();
            messagesBuilder_ = null;
            messages_ = other.messages_;
            bitField0_ = (bitField0_ & ~0x00000004);
            messagesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMessagesFieldBuilder() : null;
          } else {
            messagesBuilder_.addAllMessages(other.messages_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              context_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.google.ai.generativelanguage.v1beta2.Example m =
                  input.readMessage(
                      com.google.ai.generativelanguage.v1beta2.Example.parser(),
                      extensionRegistry);
              if (examplesBuilder_ == null) {
                ensureExamplesIsMutable();
                examples_.add(m);
              } else {
                examplesBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.google.ai.generativelanguage.v1beta2.Message m =
                  input.readMessage(
                      com.google.ai.generativelanguage.v1beta2.Message.parser(),
                      extensionRegistry);
              if (messagesBuilder_ == null) {
                ensureMessagesIsMutable();
                messages_.add(m);
              } else {
                messagesBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object context_ = "";
    /**
     * <pre>
     * Optional. Text that should be provided to the model first to ground the
     * response.
     * If not empty, this `context` will be given to the model first before the
     * `examples` and `messages`. When using a `context` be sure to provide it
     * with every request to maintain continuity.
     * This field can be a description of your prompt to the model to help provide
     * context and guide the responses. Examples: "Translate the phrase from
     * English to French." or "Given a statement, classify the sentiment as happy,
     * sad or neutral."
     * Anything included in this field will take precedence over message history
     * if the total input size exceeds the model's `input_token_limit` and the
     * input request is truncated.
     * </pre>
     *
     * <code>string context = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The context.
     */
    public java.lang.String getContext() {
      java.lang.Object ref = context_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        context_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional. Text that should be provided to the model first to ground the
     * response.
     * If not empty, this `context` will be given to the model first before the
     * `examples` and `messages`. When using a `context` be sure to provide it
     * with every request to maintain continuity.
     * This field can be a description of your prompt to the model to help provide
     * context and guide the responses. Examples: "Translate the phrase from
     * English to French." or "Given a statement, classify the sentiment as happy,
     * sad or neutral."
     * Anything included in this field will take precedence over message history
     * if the total input size exceeds the model's `input_token_limit` and the
     * input request is truncated.
     * </pre>
     *
     * <code>string context = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return The bytes for context.
     */
    public com.google.protobuf.ByteString
        getContextBytes() {
      java.lang.Object ref = context_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        context_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional. Text that should be provided to the model first to ground the
     * response.
     * If not empty, this `context` will be given to the model first before the
     * `examples` and `messages`. When using a `context` be sure to provide it
     * with every request to maintain continuity.
     * This field can be a description of your prompt to the model to help provide
     * context and guide the responses. Examples: "Translate the phrase from
     * English to French." or "Given a statement, classify the sentiment as happy,
     * sad or neutral."
     * Anything included in this field will take precedence over message history
     * if the total input size exceeds the model's `input_token_limit` and the
     * input request is truncated.
     * </pre>
     *
     * <code>string context = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param value The context to set.
     * @return This builder for chaining.
     */
    public Builder setContext(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      context_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Text that should be provided to the model first to ground the
     * response.
     * If not empty, this `context` will be given to the model first before the
     * `examples` and `messages`. When using a `context` be sure to provide it
     * with every request to maintain continuity.
     * This field can be a description of your prompt to the model to help provide
     * context and guide the responses. Examples: "Translate the phrase from
     * English to French." or "Given a statement, classify the sentiment as happy,
     * sad or neutral."
     * Anything included in this field will take precedence over message history
     * if the total input size exceeds the model's `input_token_limit` and the
     * input request is truncated.
     * </pre>
     *
     * <code>string context = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return This builder for chaining.
     */
    public Builder clearContext() {
      context_ = getDefaultInstance().getContext();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Text that should be provided to the model first to ground the
     * response.
     * If not empty, this `context` will be given to the model first before the
     * `examples` and `messages`. When using a `context` be sure to provide it
     * with every request to maintain continuity.
     * This field can be a description of your prompt to the model to help provide
     * context and guide the responses. Examples: "Translate the phrase from
     * English to French." or "Given a statement, classify the sentiment as happy,
     * sad or neutral."
     * Anything included in this field will take precedence over message history
     * if the total input size exceeds the model's `input_token_limit` and the
     * input request is truncated.
     * </pre>
     *
     * <code>string context = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param value The bytes for context to set.
     * @return This builder for chaining.
     */
    public Builder setContextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      context_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<com.google.ai.generativelanguage.v1beta2.Example> examples_ =
      java.util.Collections.emptyList();
    private void ensureExamplesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        examples_ = new java.util.ArrayList<com.google.ai.generativelanguage.v1beta2.Example>(examples_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ai.generativelanguage.v1beta2.Example, com.google.ai.generativelanguage.v1beta2.Example.Builder, com.google.ai.generativelanguage.v1beta2.ExampleOrBuilder> examplesBuilder_;

    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public java.util.List<com.google.ai.generativelanguage.v1beta2.Example> getExamplesList() {
      if (examplesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(examples_);
      } else {
        return examplesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public int getExamplesCount() {
      if (examplesBuilder_ == null) {
        return examples_.size();
      } else {
        return examplesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.ai.generativelanguage.v1beta2.Example getExamples(int index) {
      if (examplesBuilder_ == null) {
        return examples_.get(index);
      } else {
        return examplesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setExamples(
        int index, com.google.ai.generativelanguage.v1beta2.Example value) {
      if (examplesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExamplesIsMutable();
        examples_.set(index, value);
        onChanged();
      } else {
        examplesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setExamples(
        int index, com.google.ai.generativelanguage.v1beta2.Example.Builder builderForValue) {
      if (examplesBuilder_ == null) {
        ensureExamplesIsMutable();
        examples_.set(index, builderForValue.build());
        onChanged();
      } else {
        examplesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder addExamples(com.google.ai.generativelanguage.v1beta2.Example value) {
      if (examplesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExamplesIsMutable();
        examples_.add(value);
        onChanged();
      } else {
        examplesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder addExamples(
        int index, com.google.ai.generativelanguage.v1beta2.Example value) {
      if (examplesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExamplesIsMutable();
        examples_.add(index, value);
        onChanged();
      } else {
        examplesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder addExamples(
        com.google.ai.generativelanguage.v1beta2.Example.Builder builderForValue) {
      if (examplesBuilder_ == null) {
        ensureExamplesIsMutable();
        examples_.add(builderForValue.build());
        onChanged();
      } else {
        examplesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder addExamples(
        int index, com.google.ai.generativelanguage.v1beta2.Example.Builder builderForValue) {
      if (examplesBuilder_ == null) {
        ensureExamplesIsMutable();
        examples_.add(index, builderForValue.build());
        onChanged();
      } else {
        examplesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder addAllExamples(
        java.lang.Iterable<? extends com.google.ai.generativelanguage.v1beta2.Example> values) {
      if (examplesBuilder_ == null) {
        ensureExamplesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, examples_);
        onChanged();
      } else {
        examplesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder clearExamples() {
      if (examplesBuilder_ == null) {
        examples_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        examplesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder removeExamples(int index) {
      if (examplesBuilder_ == null) {
        ensureExamplesIsMutable();
        examples_.remove(index);
        onChanged();
      } else {
        examplesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.ai.generativelanguage.v1beta2.Example.Builder getExamplesBuilder(
        int index) {
      return getExamplesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.ai.generativelanguage.v1beta2.ExampleOrBuilder getExamplesOrBuilder(
        int index) {
      if (examplesBuilder_ == null) {
        return examples_.get(index);  } else {
        return examplesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public java.util.List<? extends com.google.ai.generativelanguage.v1beta2.ExampleOrBuilder> 
         getExamplesOrBuilderList() {
      if (examplesBuilder_ != null) {
        return examplesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(examples_);
      }
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.ai.generativelanguage.v1beta2.Example.Builder addExamplesBuilder() {
      return getExamplesFieldBuilder().addBuilder(
          com.google.ai.generativelanguage.v1beta2.Example.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.ai.generativelanguage.v1beta2.Example.Builder addExamplesBuilder(
        int index) {
      return getExamplesFieldBuilder().addBuilder(
          index, com.google.ai.generativelanguage.v1beta2.Example.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional. Examples of what the model should generate.
     * This includes both user input and the response that the model should
     * emulate.
     * These `examples` are treated identically to conversation messages except
     * that they take precedence over the history in `messages`:
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated. Items will be dropped from `messages` before `examples`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Example examples = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public java.util.List<com.google.ai.generativelanguage.v1beta2.Example.Builder> 
         getExamplesBuilderList() {
      return getExamplesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ai.generativelanguage.v1beta2.Example, com.google.ai.generativelanguage.v1beta2.Example.Builder, com.google.ai.generativelanguage.v1beta2.ExampleOrBuilder> 
        getExamplesFieldBuilder() {
      if (examplesBuilder_ == null) {
        examplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ai.generativelanguage.v1beta2.Example, com.google.ai.generativelanguage.v1beta2.Example.Builder, com.google.ai.generativelanguage.v1beta2.ExampleOrBuilder>(
                examples_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        examples_ = null;
      }
      return examplesBuilder_;
    }

    private java.util.List<com.google.ai.generativelanguage.v1beta2.Message> messages_ =
      java.util.Collections.emptyList();
    private void ensureMessagesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        messages_ = new java.util.ArrayList<com.google.ai.generativelanguage.v1beta2.Message>(messages_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ai.generativelanguage.v1beta2.Message, com.google.ai.generativelanguage.v1beta2.Message.Builder, com.google.ai.generativelanguage.v1beta2.MessageOrBuilder> messagesBuilder_;

    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.util.List<com.google.ai.generativelanguage.v1beta2.Message> getMessagesList() {
      if (messagesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(messages_);
      } else {
        return messagesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public int getMessagesCount() {
      if (messagesBuilder_ == null) {
        return messages_.size();
      } else {
        return messagesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.ai.generativelanguage.v1beta2.Message getMessages(int index) {
      if (messagesBuilder_ == null) {
        return messages_.get(index);
      } else {
        return messagesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setMessages(
        int index, com.google.ai.generativelanguage.v1beta2.Message value) {
      if (messagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessagesIsMutable();
        messages_.set(index, value);
        onChanged();
      } else {
        messagesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setMessages(
        int index, com.google.ai.generativelanguage.v1beta2.Message.Builder builderForValue) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        messages_.set(index, builderForValue.build());
        onChanged();
      } else {
        messagesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addMessages(com.google.ai.generativelanguage.v1beta2.Message value) {
      if (messagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessagesIsMutable();
        messages_.add(value);
        onChanged();
      } else {
        messagesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addMessages(
        int index, com.google.ai.generativelanguage.v1beta2.Message value) {
      if (messagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessagesIsMutable();
        messages_.add(index, value);
        onChanged();
      } else {
        messagesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addMessages(
        com.google.ai.generativelanguage.v1beta2.Message.Builder builderForValue) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        messages_.add(builderForValue.build());
        onChanged();
      } else {
        messagesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addMessages(
        int index, com.google.ai.generativelanguage.v1beta2.Message.Builder builderForValue) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        messages_.add(index, builderForValue.build());
        onChanged();
      } else {
        messagesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder addAllMessages(
        java.lang.Iterable<? extends com.google.ai.generativelanguage.v1beta2.Message> values) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, messages_);
        onChanged();
      } else {
        messagesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearMessages() {
      if (messagesBuilder_ == null) {
        messages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        messagesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder removeMessages(int index) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        messages_.remove(index);
        onChanged();
      } else {
        messagesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.ai.generativelanguage.v1beta2.Message.Builder getMessagesBuilder(
        int index) {
      return getMessagesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.ai.generativelanguage.v1beta2.MessageOrBuilder getMessagesOrBuilder(
        int index) {
      if (messagesBuilder_ == null) {
        return messages_.get(index);  } else {
        return messagesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.util.List<? extends com.google.ai.generativelanguage.v1beta2.MessageOrBuilder> 
         getMessagesOrBuilderList() {
      if (messagesBuilder_ != null) {
        return messagesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(messages_);
      }
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.ai.generativelanguage.v1beta2.Message.Builder addMessagesBuilder() {
      return getMessagesFieldBuilder().addBuilder(
          com.google.ai.generativelanguage.v1beta2.Message.getDefaultInstance());
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.ai.generativelanguage.v1beta2.Message.Builder addMessagesBuilder(
        int index) {
      return getMessagesFieldBuilder().addBuilder(
          index, com.google.ai.generativelanguage.v1beta2.Message.getDefaultInstance());
    }
    /**
     * <pre>
     * Required. A snapshot of the recent conversation history sorted
     * chronologically.
     * Turns alternate between two authors.
     * If the total input size exceeds the model's `input_token_limit` the input
     * will be truncated: The oldest items will be dropped from `messages`.
     * </pre>
     *
     * <code>repeated .google.ai.generativelanguage.v1beta2.Message messages = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.util.List<com.google.ai.generativelanguage.v1beta2.Message.Builder> 
         getMessagesBuilderList() {
      return getMessagesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.ai.generativelanguage.v1beta2.Message, com.google.ai.generativelanguage.v1beta2.Message.Builder, com.google.ai.generativelanguage.v1beta2.MessageOrBuilder> 
        getMessagesFieldBuilder() {
      if (messagesBuilder_ == null) {
        messagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.ai.generativelanguage.v1beta2.Message, com.google.ai.generativelanguage.v1beta2.Message.Builder, com.google.ai.generativelanguage.v1beta2.MessageOrBuilder>(
                messages_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        messages_ = null;
      }
      return messagesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.ai.generativelanguage.v1beta2.MessagePrompt)
  }

  // @@protoc_insertion_point(class_scope:google.ai.generativelanguage.v1beta2.MessagePrompt)
  private static final com.google.ai.generativelanguage.v1beta2.MessagePrompt DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.ai.generativelanguage.v1beta2.MessagePrompt();
  }

  public static com.google.ai.generativelanguage.v1beta2.MessagePrompt getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MessagePrompt>
      PARSER = new com.google.protobuf.AbstractParser<MessagePrompt>() {
    @java.lang.Override
    public MessagePrompt parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MessagePrompt> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MessagePrompt> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.ai.generativelanguage.v1beta2.MessagePrompt getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

